{"version":3,"sources":["components/Video/Video.skeleton.js","components/Video/Video.js","components/Video/index.js"],"names":["VideoSkeleton","error","className","withRouter","history","useState","videoInit","setVideoInit","videoError","setVideoError","attempts","setAttempts","barcode","setBarcode","onProductFound","code","Quagga","stop","push","onDetected","result","offDetected","fetch","codeResult","then","res","json","onInfoFetched","status","prevState","useEffect","navigator","mediaDevices","getUserMedia","init","inputStream","name","type","target","document","querySelector","numOfWorkers","locate","decoder","readers","err","start","role","BarcodeInputField","id","Video"],"mappings":"2LAgBeA,EAZO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpB,qBAAKC,UAAU,kBAAf,SACGD,EACC,GAEA,qBAAKC,UAAU,2BAAf,SACE,cAAC,IAAD,SC6GOC,eA9GD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,MAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAiB,SAACC,GACtBC,IAAOC,OACM,cAATF,EACFX,EAAQc,KAAR,mBAAyBH,EAAzB,iBAAsCH,IAEtCR,EAAQc,KAAR,mBAAyBH,KASvBI,EAAa,SAAbA,EAAcC,GAClBJ,IAAOK,YAAYF,GACnBG,MAAM,kDAAD,OAC+CF,EAAOG,WAAWR,KADjE,UAGFS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAElBF,MAAK,SAACC,GAAD,OAASE,EAAcF,OAG3BE,EAAgB,SAACF,GACrB,IAAQG,EAAiBH,EAAjBG,OAAQb,EAASU,EAATV,KAChBF,EAAWE,GACXJ,GAAY,SAACkB,GAAD,OAAeA,EAAY,KAExB,IAAXD,EACFd,EAAeC,GAEfC,IAAOG,WAAWA,IA0CtB,OAtCAW,qBAAU,WACJC,UAAUC,cAAgBD,UAAUC,aAAaC,eACnDjB,IAAOkB,KACL,CACEC,YAAa,CACXC,KAAM,OACNC,KAAM,aACNC,OAAQC,SAASC,cAAc,WAEjCC,aAAc,EACdC,QAAQ,EACRC,QAAS,CACPC,QAAS,CACP,aACA,eACA,aACA,sBAIN,SAACC,GACKA,EACFpC,GAAc,IAhDtBO,IAAO8B,QACPvC,GAAa,OAqDXS,IAAOG,WAAWA,MAEnB,IAEHW,qBAAU,WACJpB,EAAW,GACbI,EAAe,eAEhB,CAACJ,IAGF,gCACE,qBAAKR,UAAU,qBAAf,SACE,yDACgC,IAC9B,sBAAM6C,KAAK,MAAM,aAAW,QAA5B,+BAKJ,qBAAK7C,UAAU,mBAAf,SACGM,EACC,qBAAKN,UAAU,wBAAf,SACE,gCACE,4EACA,gEACA,cAAC8C,EAAA,EAAD,SAIJ,gCACE,qBAAK9C,UAAU,QAAQ+C,GAAG,UACzB3C,EAAY,GAAK,cAAC,EAAD,eC7Gf4C","file":"static/js/4.ee7a185b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Loader from \"react-feather/dist/icons/loader\";\r\n\r\nconst VideoSkeleton = ({ error }) => (\r\n  <div className=\"skeleton__video\">\r\n    {error ? (\r\n      \"\"\r\n    ) : (\r\n      <div className=\"skeleton__video--loading\">\r\n        <Loader />\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default VideoSkeleton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Quagga from \"quagga\";\r\n\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport BarcodeInputField from \"../BarcodeInputField\";\r\n\r\nimport VideoSkeleton from \"./Video.skeleton\";\r\n\r\nconst Video = ({ history }) => {\r\n  const [videoInit, setVideoInit] = useState(false);\r\n  const [videoError, setVideoError] = useState(false);\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [barcode, setBarcode] = useState(null);\r\n\r\n  const onProductFound = (code) => {\r\n    Quagga.stop();\r\n    if (code === \"not-found\") {\r\n      history.push(`/product/${code}?code=${barcode}`);\r\n    } else {\r\n      history.push(`/product/${code}`);\r\n    }\r\n  };\r\n\r\n  const onInitSuccess = () => {\r\n    Quagga.start();\r\n    setVideoInit(true);\r\n  };\r\n\r\n  const onDetected = (result) => {\r\n    Quagga.offDetected(onDetected);\r\n    fetch(\r\n      `https://world.openfoodfacts.org/api/v0/product/${result.codeResult.code}.json`\r\n    )\r\n      .then((res) => res.json())\r\n      // eslint-disable-next-line no-use-before-define\r\n      .then((res) => onInfoFetched(res));\r\n  };\r\n\r\n  const onInfoFetched = (res) => {\r\n    const { status, code } = res;\r\n    setBarcode(code);\r\n    setAttempts((prevState) => prevState + 1);\r\n\r\n    if (status === 1) {\r\n      onProductFound(code);\r\n    } else {\r\n      Quagga.onDetected(onDetected);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            name: \"Live\",\r\n            type: \"LiveStream\",\r\n            target: document.querySelector(\"#video\"),\r\n          },\r\n          numOfWorkers: 1,\r\n          locate: true,\r\n          decoder: {\r\n            readers: [\r\n              \"ean_reader\",\r\n              \"ean_8_reader\",\r\n              \"upc_reader\",\r\n              \"code_128_reader\",\r\n            ],\r\n          },\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            setVideoError(true);\r\n            return;\r\n          }\r\n          onInitSuccess();\r\n        }\r\n      );\r\n      Quagga.onDetected(onDetected);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (attempts > 3) {\r\n      onProductFound(\"not-found\");\r\n    }\r\n  }, [attempts]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"video__explanation\">\r\n        <p>\r\n          Scan a product&apos;s barcode{\" \"}\r\n          <span role=\"img\" aria-label=\"apple\">\r\n            üçé\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"video__container\">\r\n        {videoError ? (\r\n          <div className=\"skeleton__unsopported\">\r\n            <div>\r\n              <p>Your device does not support camera access </p>\r\n              <p>You can enter the barcode below</p>\r\n              <BarcodeInputField />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"video\" id=\"video\" />\r\n            {videoInit ? \"\" : <VideoSkeleton />}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Video);\r\n","import Video from \"./Video\";\r\n\r\nexport default Video;\r\n"],"sourceRoot":""}